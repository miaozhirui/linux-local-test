<project name="common-build" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
  <description>Common Build File</description>

  <dirname property="current.dir" file="${ant.file.common-build}"/>
  <property name="root.dir" location="${current.dir}/../../"/>
  <property name="tmp.dir" location="${root.dir}/build/tmp/"/>
  <property name="gcc.jar" location="${current.dir}/compiler.jar"/>
  <property name="yc.jar" location="${current.dir}/yuicompressor.jar"/>

  <property name="version" value="0.9.0dev"/>
  <property name="charset" value="utf-8"/>
  <property name="copyright.files" value="*.css, *.js"/>
  <property name="filename" value="${module.name}"/>
  <property name="gcc.warning.level" value="VERBOSE"/>

  <!-- 用 gslint 检查 style -->
  <target name="gjslint">
    <exec executable="gjslint" os="Mac" failonerror="true">
      <arg line="--strict *.js"/>
    </exec>
  </target>

  <!-- 清空、复制等准备工作 -->
  <target name="prepare">
    <delete dir="${tmp.dir}"/>
    <mkdir dir="${tmp.dir}"/>
    <copy todir="${tmp.dir}">
      <fileset dir="${module.dir}" includes="${module.files}"/>
    </copy>
  </target>

  <!-- 压缩代码 -->
  <target name="compress">
    <!-- 保存 debug 版本 -->
    <copy todir="${tmp.dir}">
      <fileset dir="${tmp.dir}"/>
      <mapper type="regexp"
              from="^(.*?)(?:-pkg)?\.(css|js)$"
              to="\1-debug.\2"/>
    </copy>

    <!-- 去除 console.log 等代码行 -->
    <replaceregexp match="^\s*console\.[\w]+\(.+$"
                   replace=""
                   flags="g"
                   byline="true"
                   encoding="${charset}">
      <fileset dir="${tmp.dir}" includes="*-pkg.js"/>
    </replaceregexp>

    <!-- 用 YUICompressor 压缩 CSS -->
    <apply executable="java" verbose="true" dir="${tmp.dir}">
      <fileset dir="${tmp.dir}" includes="*.css"/>
      <arg line="-jar"/>
      <arg path="${yc.jar}"/>
      <arg line="--charset ${charset}"/>
      <srcfile/>
      <arg line="-o ${filename}.css"/>
    </apply>

    <!-- 调整 Google Closure Compiler 的配置信息 -->
    <ac:if>
      <equals arg1="${gcc.warning.level}" arg2="VERBOSE"/>
      <ac:then>
        <property name="gcc.checkTypes" value="error"/>
      </ac:then>
      <ac:else>
        <property name="gcc.checkTypes" value="off"/>
      </ac:else>
    </ac:if>

    <!-- 用 Google Closure Compiler 压缩 JS -->
    <apply executable="java" verbose="true" dir="${tmp.dir}" failonerror="true">
      <fileset dir="${tmp.dir}" includes="*-pkg.js"/>
      <arg line="-jar"/>
      <arg path="${gcc.jar}"/>
      <arg line="--compilation_level SIMPLE_OPTIMIZATIONS"/>

      <!-- http://code.google.com/p/closure-compiler/wiki/Warnings -->
      <arg line="--warning_level ${gcc.warning.level}"/>
      <arg line="--jscomp_${gcc.checkTypes}=checkTypes"/>
      <arg line="--jscomp_off=fileoverviewTags"/>

      <arg line="--js"/>
      <srcfile/>
      <arg line="--js_output_file ${filename}.js"/>
    </apply>

    <!-- 将 "\u000b" 还原为 "\v", 使得 isIE876 的探测有效 -->
    <replaceregexp match="\\u000b"
                   replace="\\\\v"
                   flags="g"
                   encoding="${charset}">
      <fileset dir="${tmp.dir}" includes="${filename}.js"/>
    </replaceregexp>

    <delete>
      <fileset dir="${tmp.dir}" includes="*-pkg.js"/>
    </delete>
  </target>

  <!-- 删除 "var module=module||{};" -->
  <target name="remove-var-module">
    <replace dir="${tmp.dir}/../" value="">
      <include name="${filename}.js"/>
      <include name="${filename}-debug.js"/>
      <replacefilter token="var module=module||{};"/>
    </replace>
  </target>

  <!-- 对 JS 文件 ASCII 化 -->
  <target name="native2ascii" depends="compress">
    <mkdir dir="${tmp.dir}/ascii"/>
    <move todir="${tmp.dir}/ascii">
      <!-- 仅需对未压缩的 debug 文件 ascii 化，gcc 过的已 ascii 化 -->
      <fileset dir="${tmp.dir}" includes="*-debug.js"/>
    </move>
    <native2ascii encoding="${charset}"
                  src="${tmp.dir}/ascii"
                  dest="${tmp.dir}"
                  includes="*.js"/>
    <delete dir="${tmp.dir}/ascii"/>
  </target>

  <!-- 替换版本信息以及给文件加上版权信息 -->
  <target name="copyright">
    <tstamp>
      <format property="stamp.time" pattern="MMM d HH:mm" locale="en,UK"/>
      <format property="build.year" pattern="yyyy"/>
    </tstamp>

    <!-- 仅在版本发布时，打时间戳 -->
    <condition property="build.time" value="${stamp.time}">
      <matches string="${version}" pattern=".+\d$"/>
    </condition>

    <mkdir dir="${tmp.dir}/cp"/>
    <move todir="${tmp.dir}/cp">
      <fileset dir="${tmp.dir}" includes="${copyright.files}"/>
    </move>

    <ac:for param="file">
      <path>
        <fileset dir="${tmp.dir}/cp" includes="${copyright.files}"/>
      </path>
      <sequential>
        <concat destfile="@{file}.tmp" encoding="${charset}"
                outputencoding="${charset}">
          <header filtering="no" trimleading="yes">/*
            Copyright ${build.year}, SeaJS v${version}
            MIT Licensed
            build time: ${build.time}
            */

          </header>
          <fileset file="@{file}"/>
        </concat>
        <replaceregexp match="@VERSION@"
                       replace="${version}"
                       flags="g"
                       encoding="${charset}"
                       byline="true"
                       file="@{file}.tmp"/>
        <move file="@{file}.tmp" tofile="@{file}"/>
      </sequential>
    </ac:for>

    <move todir="${tmp.dir}">
      <fileset dir="${tmp.dir}/cp" includes="${copyright.files}"/>
    </move>
    <delete dir="${tmp.dir}/cp"/>
  </target>

  <!-- 扫尾工作 -->
  <target name="destroy">
    <move todir="${tmp.dir}/../">
      <fileset dir="${tmp.dir}" includes="*.js,*.css"/>
    </move>
    <delete dir="${tmp.dir}"/>
  </target>

  <target name="common.build"
          depends="prepare,compress,native2ascii,copyright,destroy">
  </target>
</project>